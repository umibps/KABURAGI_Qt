/* This file is autogenerated. DO NOT CHANGE. All changes will be lost */

#ifndef FIELD_MASK_QPB_H
#define FIELD_MASK_QPB_H

#include "protobufwellknowntypes_exports.qpb.h"

#include <QtProtobuf/qprotobuflazymessagepointer.h>
#include <QtProtobuf/qprotobufmessage.h>
#include <QtProtobuf/qprotobufobject.h>
#include <QtProtobuf/qtprotobuftypes.h>

#include <QtCore/qbytearray.h>
#include <QtCore/qlist.h>
#include <QtCore/qmetatype.h>
#include <QtCore/qshareddata.h>
#include <QtCore/qstring.h>

namespace google::protobuf {
class FieldMask;
namespace FieldMask_QtProtobufNested {
enum class QtProtobufFieldEnum;
} // namespace FieldMask_QtProtobufNested

#ifdef QT_USE_PROTOBUF_LIST_ALIASES
using FieldMaskRepeated = QList<FieldMask>;
#endif // QT_USE_PROTOBUF_LIST_ALIASES

class FieldMask_QtProtobufData;
class FieldMask : public QProtobufMessage
{
    Q_PROTOBUF_OBJECT_EXPORT(QPB_PROTOBUFWELLKNOWNTYPES_EXPORT)
    Q_PROPERTY(QStringList paths READ paths WRITE setPaths SCRIPTABLE true)

public:
    using QtProtobufFieldEnum = FieldMask_QtProtobufNested::QtProtobufFieldEnum;
    QPB_PROTOBUFWELLKNOWNTYPES_EXPORT FieldMask();
    QPB_PROTOBUFWELLKNOWNTYPES_EXPORT ~FieldMask();
    QPB_PROTOBUFWELLKNOWNTYPES_EXPORT FieldMask(const FieldMask &other);
    QPB_PROTOBUFWELLKNOWNTYPES_EXPORT FieldMask &operator =(const FieldMask &other);
    QPB_PROTOBUFWELLKNOWNTYPES_EXPORT FieldMask(FieldMask &&other) noexcept;
    FieldMask &operator =(FieldMask &&other) noexcept
    {
        swap(other);
        return *this;
    }
    void swap(FieldMask &other) noexcept
    {
        QProtobufMessage::swap(other);
        dptr.swap(other.dptr);
    }
    QPB_PROTOBUFWELLKNOWNTYPES_EXPORT Q_IMPLICIT operator QVariant() const;

    QPB_PROTOBUFWELLKNOWNTYPES_EXPORT const QStringList &paths() const &;
    QPB_PROTOBUFWELLKNOWNTYPES_EXPORT void setPaths(const QStringList &paths);
    QPB_PROTOBUFWELLKNOWNTYPES_EXPORT void setPaths(QStringList &&paths);
    QPB_PROTOBUFWELLKNOWNTYPES_EXPORT static void registerTypes();

private:
    friend QPB_PROTOBUFWELLKNOWNTYPES_EXPORT bool comparesEqual(const FieldMask &lhs, const FieldMask &rhs) noexcept;
    friend bool operator==(const FieldMask &lhs, const FieldMask &rhs) noexcept
    {
        return comparesEqual(lhs, rhs);
    }
    friend bool operator!=(const FieldMask &lhs, const FieldMask &rhs) noexcept
    {
        return !comparesEqual(lhs, rhs);
    }
    QExplicitlySharedDataPointer<FieldMask_QtProtobufData> dptr;
};
namespace FieldMask_QtProtobufNested {
Q_NAMESPACE_EXPORT(QPB_PROTOBUFWELLKNOWNTYPES_EXPORT)

enum class QtProtobufFieldEnum {
    PathsProtoFieldNumber = 1,
};
Q_ENUM_NS(QtProtobufFieldEnum)

} // namespace FieldMask_QtProtobufNested
} // namespace google::protobuf

#endif // FIELD_MASK_QPB_H
